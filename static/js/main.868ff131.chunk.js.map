{"version":3,"sources":["components/appStyle.module.css","components/card.js","components/cardgenerator.js","components/search.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","collection","className","styles","robot","alt","src","id","name","email","Cardgenerator","robots","length","robotlist","map","Search","useState","state","setState","data","setData","useEffect","axios","get","then","res","console","log","catch","err","filter","toLowerCase","includes","value","onChange","e","target","placeholder","searchBox","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yIACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,UAAY,4BAA4B,MAAQ,0B,yICY3FC,MAVf,YAA6B,IAAdC,EAAa,EAAbA,WACX,OACI,sBAAKC,UAAWC,IAAOC,MAAvB,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BL,EAAWM,GAArC,4BAC3B,6BAAMN,EAAWO,OACjB,4BAAIP,EAAWQ,YCaJC,MAjBf,YAAkC,IAAVC,EAAS,EAATA,OACpB,OAAmB,IAAhBA,EAAOC,OAGN,qBAAKV,UAAWC,IAAOU,UAAvB,SACIF,EAAOG,KAAI,SAACV,GAAD,OAAS,cAAC,EAAD,CAAqBH,WAAYG,EAAjC,SAAyCA,EAAMG,IAApCH,EAAMG,SAOrC,kDCiBGQ,MA1Bf,WACI,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoBF,mBAAS,IAA7B,mBAAMG,EAAN,KAAWC,EAAX,KACAC,qBAAU,WACNC,IAAMC,IAAI,+CACTC,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZL,EAAQK,EAAIN,SAEfS,OAAM,SAACC,GACJH,QAAQC,IAAIE,QAElB,IACF,IAGMlB,EAAOQ,EAAKW,QAAO,SAAC1B,GAAD,OAASA,EAAMI,KAAKuB,cAAcC,SAASf,EAAMc,kBAE1E,OACI,gCACI,uBAAOE,MAAOhB,EAAOiB,SAPV,SAACC,GAChBjB,EAASiB,EAAEC,OAAOH,QAM+BI,YAAY,gBAAgBnC,UAAWC,IAAOmC,YAC3F,cAAC,EAAD,CAAe3B,OAAQA,QCjBpB4B,MARf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.868ff131.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"appStyle_searchBox__2OM2o\",\"robotlist\":\"appStyle_robotlist__1o0Or\",\"robot\":\"appStyle_robot__1XBZA\"};","import React from 'react'\nimport styles from './appStyle.module.css'\n\nfunction Card({collection}) {\n    return (\n        <div className={styles.robot}>\n            <img alt=\"user\" src={`https://robohash.org/${collection.id}?set=set1&size=200x200`}/>\n    <h3 >{collection.name}</h3>\n    <p>{collection.email}</p>\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './card'\nimport styles from './appStyle.module.css'\n\nfunction Cardgenerator({robots}) {\n    if(robots.length!==0){\n    return (\n        \n        <div className={styles.robotlist}>\n           {robots.map((robot)=><Card key={robot.id} collection={robot}>{robot.id}</Card>)} \n        </div>\n        \n    )\n    }\n    else{\n        return(\n            <h1>robot not found</h1>\n        )\n    }\n}\n\nexport default Cardgenerator\n","import React,{useEffect,useState} from 'react'\nimport axios from 'axios'\nimport Cardgenerator from './cardgenerator'\nimport styles from './appStyle.module.css'\n\n\n\nfunction Search() {\n    const [state,setState]=useState(\"\")\n    const[data,setData]=useState([])\n    useEffect(()=>{\n        axios.get('https://jsonplaceholder.typicode.com/users/')\n        .then((res)=>{\n            console.log(res)\n            setData(res.data)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    },[])\n    const inputHandler=(e)=>{\n        setState(e.target.value)\n    }\n    const robots=data.filter((robot)=>robot.name.toLowerCase().includes(state.toLowerCase()))\n    \n    return (\n        <div>\n            <input value={state} onChange={inputHandler} placeholder=\"search robots\" className={styles.searchBox}></input>\n            <Cardgenerator robots={robots}></Cardgenerator>\n        </div>\n    )\n}\n\nexport default Search\n","import './App.css';\nimport {useEffect} from 'react'\nimport Search from './components/search'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search></Search>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}